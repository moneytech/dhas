{
	"api" : [
		{
			"method" : "GET",
			"path" : "/events/show",
			"params" : [
			],
			"description" : "show all scheduled events"
		},
		{
			"method" : "GET",
			"path" : "/events/add",
			"params" : [
				{
					"description" : "hour",
					"name" : "hour"
				},
				{
					"description" : "min",
					"name" : "min"
				},
				{
					"description" : "p",
					"name" : "p"
				},
				{
					"description" : "name",
					"name" : "name"
				}
			],
			"description" : "add a scheduled event. This event will trigger the LUA script at the defined time"
		},
		{
			"method" : "GET",
			"path" : "/events/remove",
			"params" : [
				{
					"description" : "id",
					"name" : "id"
				}
			],
			"description" : "remove a scheduled event"
		},
		{
			"method" : "GET",
			"path" : "/events/gettime",
			"params" : [
			],
			"description" : "get current time"
		},
		{
			"method" : "GET",
			"path" : "/help",
			"params" : [
			],
			"description" : "display API documentation"
		},
		{
			"method" : "GET",
			"path" : "/io/getstatus",
			"params" : [
			],
			"description" : "Get current status of sensors"
		},
		{
			"method" : "GET",
			"path" : "/io/addwebrelay",
			"params" : [
				{
					"description" : "name",
					"name" : "name"
				},
				{
					"description" : "id",
					"name" : "id"
				},
				{
					"description" : "ip",
					"name" : "ip"
				}
			],
			"description" : "add web relay device"
		},
		{
			"method" : "GET",
			"path" : "/io/setrelay",
			"params" : [
				{
					"description" : "name",
					"name" : "name"
				},
				{
					"description" : "on",
					"name" : "on"
				}
			],
			"description" : "Set relay on or off"
		},
		{
			"method" : "GET",
			"path" : "/io/setoutput",
			"params" : [
				{
					"description" : "number",
					"name" : "number"
				},
				{
					"description" : "on",
					"name" : "on"
				}
			],
			"description" : "Set IO board output pin on or off"
		},
		{
			"method" : "GET",
			"path" : "/weather/setip",
			"params" : [
				{
					"description" : "ip",
					"name" : "ip"
				}
			],
			"description" : "set IP of weather controller"
		},
		{
			"method" : "GET",
			"path" : "/weather/getstats",
			"params" : [
			],
			"description" : "retrieve stats"
		},
		{
			"method" : "GET",
			"path" : "/audio/play",
			"params" : [
				{
					"description" : "sound",
					"name" : "sound"
				}
			],
			"description" : "plays files defined by PLAY_STRING on onboard sound device"
		},
		{
			"method" : "GET",
			"path" : "/insteon/clearmodules",
			"params" : [
			],
			"description" : "reset list of Insteon module definition"
		},
		{
			"method" : "GET",
			"path" : "/insteon/listmodules",
			"params" : [
			],
			"description" : "lists all Insteon modules"
		},
		{
			"method" : "GET",
			"path" : "/insteon/addmodule",
			"params" : [
				{
					"description" : "name",
					"name" : "name"
				},
				{
					"description" : "id",
					"name" : "id"
				}
			],
			"description" : "add a Insteon module definition"
		},
		{
			"method" : "GET",
			"path" : "/insteon/addezflora",
			"params" : [
				{
					"description" : "name",
					"name" : "name"
				},
				{
					"description" : "id",
					"name" : "id"
				}
			],
			"description" : "add a Insteon ezflora module definition"
		},
		{
			"method" : "GET",
			"path" : "/insteon/addiolinc",
			"params" : [
				{
					"description" : "name",
					"name" : "name"
				},
				{
					"description" : "id",
					"name" : "id"
				}
			],
			"description" : "add a Insteon iolinc module definition"
		},
		{
			"method" : "GET",
			"path" : "/insteon/setcontroller",
			"params" : [
				{
					"description" : "id",
					"name" : "id"
				}
			],
			"description" : "set Insteon controller ID (PLM)"
		},
		{
			"method" : "GET",
			"path" : "/insteon/switch",
			"params" : [
				{
					"description" : "rate",
					"name" : "rate"
				},
				{
					"description" : "subdev",
					"name" : "subdev"
				},
				{
					"description" : "level",
					"name" : "level"
				},
				{
					"description" : "action",
					"name" : "action"
				},
				{
					"description" : "id",
					"name" : "id"
				}
			],
			"description" : "Turn on or off a device"
		},
		{
			"method" : "GET",
			"path" : "/insteon/ezflora/setprogram",
			"params" : [
				{
					"description" : "z8",
					"name" : "z8"
				},
				{
					"description" : "z5",
					"name" : "z5"
				},
				{
					"description" : "z4",
					"name" : "z4"
				},
				{
					"description" : "z3",
					"name" : "z3"
				},
				{
					"description" : "z7",
					"name" : "z7"
				},
				{
					"description" : "z6",
					"name" : "z6"
				},
				{
					"description" : "z2",
					"name" : "z2"
				},
				{
					"description" : "z1",
					"name" : "z1"
				},
				{
					"description" : "p",
					"name" : "p"
				},
				{
					"description" : "id",
					"name" : "id"
				}
			],
			"description" : "Sets a program on the EZFlora"
		},
		{
			"method" : "GET",
			"path" : "/insteon/ezflora/status",
			"params" : [
				{
					"description" : "id",
					"name" : "id"
				}
			],
			"description" : "Forces an update of EZFlora status"
		},
		{
			"method" : "GET",
			"path" : "/insteon/raw",
			"params" : [
				{
					"description" : "d12",
					"name" : "d12"
				},
				{
					"description" : "d10",
					"name" : "d10"
				},
				{
					"description" : "d11",
					"name" : "d11"
				},
				{
					"description" : "d9",
					"name" : "d9"
				},
				{
					"description" : "id",
					"name" : "id"
				},
				{
					"description" : "d8",
					"name" : "d8"
				},
				{
					"description" : "d3",
					"name" : "d3"
				},
				{
					"description" : "d14",
					"name" : "d14"
				},
				{
					"description" : "cmd1",
					"name" : "cmd1"
				},
				{
					"description" : "cmd2",
					"name" : "cmd2"
				},
				{
					"description" : "d1",
					"name" : "d1"
				},
				{
					"description" : "d2",
					"name" : "d2"
				},
				{
					"description" : "d13",
					"name" : "d13"
				},
				{
					"description" : "d4",
					"name" : "d4"
				},
				{
					"description" : "d6",
					"name" : "d6"
				},
				{
					"description" : "d5",
					"name" : "d5"
				},
				{
					"description" : "d7",
					"name" : "d7"
				}
			],
			"description" : "Send raw insteon command"
		},
		{
			"method" : "GET",
			"path" : "/insteon/refreshalllinksdatabase",
			"params" : [
			],
			"description" : "retrieve all-link database"
		},
		{
			"method" : "GET",
			"path" : "/phone/call",
			"params" : [
				{
					"description" : "play",
					"name" : "play"
				},
				{
					"description" : "ext",
					"name" : "ext"
				}
			],
			"description" : "Will call the given extension and optionally play sound when the remote peer answers the call. Placing a call only works if the user agent was previously registered. Called extension must be know by the proxy because direct URI are not supported. To make an intercom call (where the UAS will autoanswer) this needs to be configured on the proxy. "
		},
		{
			"method" : "GET",
			"path" : "/phone/register",
			"params" : [
				{
					"description" : "proxy",
					"name" : "proxy"
				},
				{
					"description" : "pin",
					"name" : "pin"
				},
				{
					"description" : "user",
					"name" : "user"
				}
			],
			"description" : "Will register the phone service user agent to the given PBX. This is usually done during initialization "
		},
		{
			"method" : "GET",
			"path" : "/phone/blf",
			"params" : [
				{
					"description" : "ext",
					"name" : "ext"
				}
			],
			"description" : "Will subscribe for presence events for the given extension. The extension must be a known extension in the subscribe context of our UA (if using Asterisk). "
		},
		{
			"method" : "GET",
			"path" : "/phone/showcalls",
			"params" : [
			],
			"description" : "Get the list of active calls in the system "
		},
		{
			"method" : "GET",
			"path" : "/phone/showblf",
			"params" : [
			],
			"description" : "Get the list of active subscriptions to presence events in the system "
		},
		{
			"method" : "GET",
			"path" : "/phone/release",
			"params" : [
				{
					"description" : "id",
					"name" : "id"
				}
			],
			"description" : "release a call using call ID (usually provided in call events) "
		},
		{
			"method" : "GET",
			"path" : "/phone/play",
			"params" : [
				{
					"description" : "releaseaftersounds",
					"name" : "releaseaftersounds"
				},
				{
					"description" : "id",
					"name" : "id"
				},
				{
					"description" : "sound",
					"name" : "sound"
				}
			],
			"description" : "Play sounds on an active call using given callID."
		},
		{
			"method" : "GET",
			"path" : "/phone/click2dial",
			"params" : [
				{
					"description" : "dst",
					"name" : "dst"
				},
				{
					"description" : "src",
					"name" : "src"
				},
				{
					"description" : "sound",
					"name" : "sound"
				}
			],
			"description" : "Click-2-Dial"
		}
	]
}
